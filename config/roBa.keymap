#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define NUM 2

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_win {
            bindings = <
&kp Q           &kp W                  &kp E         &kp R                 &kp T                                           &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A           &kp S                  &kp D         &kp F                 &kp G        &mkp MCLK           &kp SEMICOLON  &kp H        &kp J  &kp K      &kp L    &kp MINUS
&kp Z           &kp X                  &kp C         &kp V                 &lt 4 B      &kp TAB             &kp SLASH      &kp N        &kp M  &kp COMMA  &kp DOT  &kp EQUAL
&kp LEFT_SHIFT  &mt LEFT_ALT NUMBER_0  &kp LEFT_GUI  &mt LEFT_CONTROL TAB  &lt 2 SPACE  &lt 2 CAPSLOCK      &kp BACKSPACE  &lt 3 ENTER                             &tog 1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        default_layer_mac {
            bindings = <
&kp Q           &kp W                  &kp E             &kp R             &kp T                                           &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A           &kp S                  &kp D             &kp F             &kp G        &mkp MCLK           &kp SEMICOLON  &kp H        &kp J  &kp K      &kp L    &kp MINUS
&kp Z           &kp X                  &kp C             &kp V             &lt 4 B      &kp TAB             &kp SLASH      &kp N        &kp M  &kp COMMA  &kp DOT  &kp EQUAL
&kp LEFT_SHIFT  &mt LEFT_ALT NUMBER_0  &kp LEFT_CONTROL  &mt LEFT_GUI TAB  &lt 2 SPACE  &lt 2 CAPSLOCK      &kp BACKSPACE  &lt 3 ENTER                             &tog 0
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        CURSOR {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans     &trans          &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp LCLK  &kp UP_ARROW    &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                        &trans
            >;
        };

        NUM {
            bindings = <
&kp SQT               &kp N7        &kp N8        &kp N9        &kp LEFT_BRACE                                                &kp RIGHT_BRACE        &none               &none               &none                &trans
&kp GRAVE             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_PARENTHESIS  &kp LC(LA(KP_NUMBER_0))      &kp MINUS  &kp RIGHT_PARENTHESIS  &none               &kp LS(UP_ARROW)    &none                &trans
&kp NON_US_BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACKET      &kp EQUAL                    &kp PLUS   &kp RIGHT_BRACKET      &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &trans
&trans                &trans        &trans        &trans        &trans                &trans                       &trans     &trans                                                                              &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
